/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import * as React from 'react';
import { ICodOrderConfirmationData } from './cod-order-confirmation.data';
import { ICodOrderConfirmationProps } from './cod-order-confirmation.props.autogenerated';

export interface ICodOrderConfirmationViewProps extends ICodOrderConfirmationProps<ICodOrderConfirmationData> {
    queryParams: URLSearchParams;
    orderId?: string;
    isCod: boolean;
    isLoading: boolean;
}

/**
 *
 * CodOrderConfirmation component
 * @extends {React.PureComponent<ICodOrderConfirmationProps<ICodOrderConfirmationData>>}
 */
class CodOrderConfirmation extends React.PureComponent<ICodOrderConfirmationProps<ICodOrderConfirmationData>, { isLoading: boolean }> {
    constructor(props: ICodOrderConfirmationProps<ICodOrderConfirmationData>) {
        super(props);
        this.state = {
            isLoading: true
        };
    }

    public componentDidMount() {
        // Simulate data loading
        setTimeout(() => {
            this.setState({ isLoading: false });
        }, 1000); // Simulating a delay for loading, adjust as needed
    }

    private getQueryParams(): URLSearchParams {
        if (typeof window !== 'undefined') {
            return new URLSearchParams(window.location.search);
        }
        return new URLSearchParams(); // Return empty params on server-side
    }

    public render(): JSX.Element | null {
        const { isLoading } = this.state;
        const queryParams = this.getQueryParams();
        const isCod = queryParams.get('iscod') === 'true';
        const orderId = queryParams.get('orderid');

        return this.props.renderView({ ...this.props, queryParams, isCod, orderId, isLoading });
    }
}

export default CodOrderConfirmation;
