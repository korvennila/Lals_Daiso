/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import * as React from 'react';

import { IOrderHistoryTrackingData } from './order-history-tracking.data';
import { IOrderHistoryTrackingProps } from './order-history-tracking.props.autogenerated';

export interface IOrderHistoryTrackingViewProps extends IOrderHistoryTrackingProps<IOrderHistoryTrackingData> {
    orderHistory: any;
    handleTrackOrder: () => void;
    orderIdInputRef: React.RefObject<HTMLInputElement>;
}

/**
 *
 * OrderHistoryTracking component
 * @extends {React.PureComponent<IOrderHistoryTrackingProps<IOrderHistoryTrackingData>>}
 */
interface IOrderHistoryTrackingState {
    orderHistory: any;
}

class OrderHistoryTracking extends React.PureComponent<IOrderHistoryTrackingProps<IOrderHistoryTrackingData>, IOrderHistoryTrackingState> {
    private orderIdInputRef: React.RefObject<HTMLInputElement>;

    constructor(props: IOrderHistoryTrackingProps<IOrderHistoryTrackingData>) {
        super(props);
        this.state = {
            orderHistory: null
        };
        this.orderIdInputRef = React.createRef();
    }

    private handleTrackOrder = async (): Promise<void> => {
        const orderId = this.orderIdInputRef.current?.value;
        if (orderId) {
            const apiUrl = `https://yourapiendpoint.com/orderhistory?orderId=${orderId}`;
            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                this.setState({ orderHistory: data });
            } catch (error) {
                console.error('Failed to fetch order history:', error);
                this.setState({ orderHistory: null });
            }
        }
    };

    public render(): JSX.Element | null {
        const viewProps: IOrderHistoryTrackingViewProps = {
            ...this.props,
            orderHistory: this.state.orderHistory,
            handleTrackOrder: this.handleTrackOrder,
            orderIdInputRef: this.orderIdInputRef
        };

        return this.props.renderView(viewProps);
    }
}

export default OrderHistoryTracking;
