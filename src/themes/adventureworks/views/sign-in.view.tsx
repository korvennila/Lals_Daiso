/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { getPayloadObject, getTelemetryAttributes, getTelemetryObject, Module, Node } from '@msdyn365-commerce-modules/utilities';
import * as React from 'react';

import {
    ISignInItem,
    ISignInLoading,
    ISignInLocalAccount,
    ISignInSocialAccount,
    ISignInSocialItem,
    ISignInB2BAccount,
    ISignInB2BItem,
    ISignInViewProps,
    ISignInButton
} from '@msdyn365-commerce-modules/account-management';

import { ISignInProps, ISignInResources } from '../definition-extensions/sign-in.ext.props.autogenerated';

const LocalAccount: React.FC<ISignInLocalAccount> = ({ localAccount, items, forgetPassword, disclaimer, error, signInButton }) => {
    return (
        <Node {...localAccount}>
            {items &&
                items.map((item: ISignInItem) => {
                    return (
                        <Node key={item.key} {...item.wrapper}>
                            {item.label}
                            {item.error}
                            {item.input}
                        </Node>
                    );
                })}
            {forgetPassword}
            {disclaimer}
            {error}
            {signInButton}
        </Node>
    );
};

const SocialAccount: React.FC<ISignInSocialAccount> = ({ socialAccounts, items }) => {
    return (
        <Node {...socialAccounts}>
            {items &&
                items.map((item: ISignInSocialItem) => {
                    return (
                        <Node key={item.key} {...item.button}>
                            {item.image}
                            {item.text}
                        </Node>
                    );
                })}
        </Node>
    );
};

const B2BAccount: React.FC<ISignInB2BAccount> = ({ socialAccounts, items }) => {
    return (
        <Node {...socialAccounts}>
            {items &&
                items.map((item: ISignInB2BItem) => {
                    return (
                        item && (
                            <Node key={item.key} {...item.button}>
                                {item.text}
                            </Node>
                        )
                    );
                })}
        </Node>
    );
};

const SignInLoading: React.FC<ISignInLoading> = ({ modal, modalBody, icon, message }) => {
    return (
        <Node {...modal}>
            <Node {...modalBody}>
                {icon}
                {message}
            </Node>
        </Node>
    );
};
const SignInButton: React.FC<ISignInButton> = ({ id, className, text, ariaLabel, telemetryContent, onClick }) => {
    const payLoad = getPayloadObject('click', telemetryContent!, text);
    const attributes = getTelemetryAttributes(telemetryContent!, payLoad);
    return (
        <a id={id} className={className} aria-label={ariaLabel} onClick={onClick} {...attributes}>
            {text}
        </a>
    );
};

const signUpButton: React.FC<ISignInViewProps & ISignInProps<ISignInResources>> = (
    props: ISignInViewProps & ISignInProps<ISignInResources>
) => {
    const {
        resources,
        telemetry,
        friendlyName,
        context: {
            request: { telemetryPageName }
        }
    } = props;
    const telemetryContent = getTelemetryObject(telemetryPageName!, friendlyName, telemetry);
    const attributes = {
        href: '#'
    };

    return (
        <SignInButton
            id='createAccount'
            {...attributes}
            className={`ms-sign-in__sign-up-link msc-btn`}
            ariaLabel={resources.b2bSignUpButtonAriaLabel}
            text={resources.b2bSignUpButtonText}
            telemetryContent={telemetryContent}
        />
    );
};

const SignInView: React.FC<ISignInViewProps & ISignInProps<ISignInResources>> = props => {
    const {
        signIn,
        viewState,
        loading,
        defaultAADConainer,
        aadConainer,
        signInSection,
        signUpSection,
        signInSectionHeading,
        signInLocalAccount,
        signInSocialAccount,
        signUpSectionHeading,
        signInB2BAccount,
        signUpDescription
    } = props;

    return (
        <Module {...signIn}>
            {viewState.isShowLoading && <Node {...defaultAADConainer} />}
            {viewState.isShowLoading && <SignInLoading {...loading} />}
            <Node {...aadConainer}>
                <Node {...signInSection}>
                    {signInSectionHeading}
                    {LocalAccount(signInLocalAccount)}
                    {SocialAccount(signInSocialAccount)}
                </Node>
                <Node {...signUpSection}>
                    {signUpSectionHeading}
                    {signUpDescription}
                    {signUpButton(props)}
                </Node>
                <div className='ms-sign-in__employee-sign-in-section'>
                    <div className='ms-sign-in__employee-sign-in-section__line-strike'>
                        <span>or</span>
                    </div>
                    {B2BAccount(signInB2BAccount)}
                </div>
            </Node>
        </Module>
    );
};

export default SignInView;
