/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { buildMockModuleProps, IGridSettings, Image } from '@msdyn365-commerce/core';
import { IContentBlockViewProps } from '@msdyn365-commerce-modules/content-block';
import { render } from 'enzyme';
import * as React from 'react';

import { IContentBlockProps } from '../definition-extensions/content-block.ext.props.autogenerated';
import ContentBlockView from '../views/content-block.view';

const testGridSettings: IGridSettings = {
    xs: {
        w: 767
    },
    sm: {
        w: 991
    },
    md: {
        w: 1199
    },
    lg: {
        w: 1599
    },
    xl: {
        w: 1600
    }
};

const moduleProps: IContentBlockProps<{}> = buildMockModuleProps({}, {}) as IContentBlockProps<{}>;

// @ts-expect-error parital mock
const mockProps: IContentBlockViewProps = {
    ...moduleProps,
    title: 'HeadingComponent',
    text: 'TextComponent',
    links: 'LinksComponent',
    image: <Image src='test' gridSettings={testGridSettings} />,
    className: 'hero',
    contentBlockContainer: {
        moduleProps,
        className: 'ms-content-block'
    },
    imageContainer: {
        className: 'ms-content-block__image'
    },
    detailsContainer: {
        className: 'ms-content-block__details'
    },
    contentBlockAnchorTag: {
        tag: 'a',
        className: 'ms-content-block__link',
        role: 'link'
    },
    imageLink: '/modern/storefaq',
    imageAriaLabel: 'image aria label',
    additionalContent: {
        additionalContentNode: {
            className: 'ms-content-block__details__additional-content'
        },
        additionalContentItems: [
            {
                heading: 'Corinne williams',
                text: '{productPrice}',
                links: '{LinksComponent}',
                additionalContentItemContainer: { className: 'ms-content-block__details__additional-content__container' },
                additionalContentItemLinks: { className: 'ms-content-block__details__additional-content-cta' }
            }
        ]
    },
    handleAdditionalText: jest.fn(),
    handleAdditionalParagraph: jest.fn(),
    handleAdditionalLinkTextChange: jest.fn()
};

describe('Content block unit tests', () => {
    it('renders correctly', () => {
        const component = render(<ContentBlockView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly without image', () => {
        mockProps.image = <Image gridSettings={testGridSettings} />;
        const component = render(<ContentBlockView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly without imageLink', () => {
        mockProps.imageLink = undefined;

        const component = render(<ContentBlockView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly without additionalContentItems', () => {
        mockProps.additionalContent!.additionalContentItems = undefined;

        const component = render(<ContentBlockView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });

    it('renders correctly without anchor tag', () => {
        mockProps.contentBlockAnchorTag = undefined;

        const component = render(<ContentBlockView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
});
